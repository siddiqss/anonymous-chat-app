{"version":3,"sources":["components/Store.js","components/DashBoard.js","App.js","index.js"],"names":["socket","faker","require","firstName","Name","usState","random","us_state","startingNameGeneral","startingNameTopic","phrases","concat","gamesPhrases","CTX","React","createContext","initialState","General","from","msg","Math","floor","length","GamersZone","reducer","state","action","_action$payload","payload","topic","type","Object","objectSpread","defineProperty","toConsumableArray","sendChatAction","value","emit","Store","props","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","allChats","dispatch","io","on","user","react_default","a","createElement","Provider","children","useStyles","makeStyles","theme","root","padding","spacing","margin","flex","display","alignItems","chip","topicWindow","width","height","borderRight","chatWindow","button","msgBox","DashBoard","classes","_React$useContext","useContext","topics","keys","_React$useState","useState","_React$useState2","activeTopic","changeActiveTopic","_React$useState3","_React$useState4","textValue","changeTextValue","Paper","className","Typography","variant","component","List","map","ListItem","onClick","e","target","innerText","key","ListItemText","primary","chat","i","Chip","label","gutterBottom","TextField","id","onChange","Button","color","App","components_DashBoard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ba1b2f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport io from 'socket.io-client';\r\nconst faker = require('Faker');\r\n\r\n/*\r\n   msg {\r\n        from: 'user',\r\n        msg: 'hi',\r\n        topic: 'general'\r\n    }\r\n\r\n    state {\r\n        topic1: [\r\n            {msg},{msg}, {msg}\r\n        ]\r\n        topic2: [\r\n            {msg}, {msg}, {msg}\r\n        ]\r\n    }\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n    \r\nconst firstName = faker.Name.firstName();\r\nconst usState = faker.random.us_state();\r\nconst startingNameGeneral = faker.Name.firstName();\r\nconst startingNameTopic = faker.Name.firstName();\r\n\r\nconst phrases = [`Hey, I'm from ${usState} !`, 'Did you watch the Last Season of GOT?', 'Trump Memes are lit!', 'These 14 years old Nibbas are so cooool!!!', 'Ronaldo is sexy!', 'Sarfaraz should be fired!', 'What\\'s up!'];\r\nconst gamesPhrases = ['I Love FIFA!', 'Witcher 3 has tough missions!', 'I just played Watch Dogs 3. Man, it\\'s hot!', 'Do you play strategic games?']\r\nexport const CTX = React.createContext();\r\n\r\nconst initialState = {\r\n    General: [\r\n        {from: startingNameGeneral, msg: phrases[Math.floor(Math.random() * phrases.length)] }\r\n    ],\r\n    GamersZone: [\r\n        {from: startingNameTopic, msg: gamesPhrases[Math.floor(Math.random() * gamesPhrases.length)]},\r\n    ]\r\n}\r\n\r\nconst reducer = (state, action)=> {\r\n    const { from, msg, topic} = action.payload;\r\n    switch(action.type){\r\n        case 'RECEIVE_MSG':\r\n            return {\r\n                ...state, \r\n                [topic]: [\r\n                    ...state[topic],\r\n                    {\r\n                        from,\r\n                        msg\r\n                    }\r\n\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nlet socket;\r\nfunction sendChatAction(value){\r\n    socket.emit('chat message', value);\r\n}\r\n\r\n\r\nexport default function Store(props){\r\n    const [allChats, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n    if(!socket){\r\n        socket = io();\r\n        socket.on('chat message', function(msg){\r\n            dispatch({type: 'RECEIVE_MSG',payload: msg});\r\n        });\r\n    }\r\n\r\n    \r\n    const user = firstName;\r\n    return (\r\n        <CTX.Provider value={{allChats, sendChatAction, user}}>\r\n            {props.children}\r\n        </CTX.Provider>\r\n    )\r\n}","import React from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { CTX } from './Store';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n    margin: '50px',\r\n  },\r\n  flex: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  topicWindow: {\r\n      width: '30%',\r\n      height: '300px',\r\n      borderRight: '1px solid grey'\r\n  },\r\n  chatWindow:{\r\n      width: '70%',\r\n      height: '300px',\r\n      padding: '20px',\r\n  },\r\n\r\n  button:{\r\n      width: '15%'\r\n  },\r\n  msgBox:{\r\n      width: '80%'\r\n\r\n  },\r\n\r\n}));\r\n\r\n\r\nfunction DashBoard(props){\r\n\r\n    const classes = useStyles();\r\n    const {allChats,sendChatAction, user} = React.useContext(CTX);\r\n    const topics = Object.keys(allChats);\r\n\r\n    const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\r\n    const [textValue,changeTextValue]  = React.useState('')\r\n    \r\n    return(\r\n        <div>\r\n            <Paper className={classes.root}>\r\n                <Typography variant=\"h4\" component=\"h4\">\r\n                Anon Chat App\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\">\r\n                {activeTopic}\r\n                </Typography>\r\n\r\n                <div className={classes.flex}>\r\n                    <div className={classes.topicWindow}>\r\n                        <List>\r\n                            {\r\n                                topics.map(topic=>(\r\n                                    <ListItem onClick={e=> changeActiveTopic(e.target.innerText)} key={topic} button>\r\n                                        <ListItemText primary={topic} />\r\n                                    </ListItem>\r\n                                ))\r\n\r\n                            }  \r\n                        </List>\r\n\r\n                    </div>\r\n                    <div className={classes.chatWindow}>\r\n                        {\r\n                            allChats[activeTopic].map((chat,i)=>(\r\n                                <div className={classes.flex} key={i}>\r\n                                    <Chip label={chat.from} className={classes.chip} />\r\n                                    <Typography variant='body1' gutterBottom>{chat.msg}</Typography>\r\n                                </div>\r\n\r\n                            ))\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <div className={classes.flex}>\r\n                    <TextField\r\n                        id=\"standard-name\"\r\n                        label=\"Send a Message\"\r\n                        className={classes.msgBox}\r\n                        value={textValue}\r\n                        margin=\"normal\"\r\n                        onChange={e=> changeTextValue(e.target.value)}\r\n                    />\r\n                    <Button variant=\"contained\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            onClick = {()=> {\r\n                                sendChatAction({from: user ,msg: textValue, topic: activeTopic});\r\n                                changeTextValue('');\r\n                            }}\r\n                    >\r\n                        Send\r\n                    </Button>\r\n\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default DashBoard","import React from 'react';\nimport './App.css';\nimport DashBoard from \"./components/DashBoard\";\nimport Store from './components/Store';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Store>\n      <DashBoard />\n      </Store>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}